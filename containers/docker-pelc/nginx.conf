# Gunicorn reference https://docs.gunicorn.org/en/stable/deploy.html
# Nginx reference https://www.nginx.com/resources/wiki/start/topics/examples/full/
# Nginx image https://catalog.redhat.com/software/containers/rhel8/nginx-118/5f521a46e05bbcd88f128b64

worker_processes  2;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex on; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
  use epoll;
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;

  # Built-in Docker resolver. Needed to allow on-demand resolution of proxy
  # upstreams.
  resolver           127.0.0.11 valid=30s;

  log_format  main  '[$remote_addr] - [$remote_user] [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  keepalive_timeout  65;
  client_max_body_size 5G;

  # Transfer log to container console;
  access_log /dev/stdout main;

  server {
    listen             80 default_server;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;

      # Note this address need to be changed in production env
      proxy_pass "http://gunicorn:8000";
        }
    }
}
